shiny::runApp()
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
rlang::last_trace()
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
s_table <- function()
{
data1 <- storedData$data1
data1 <- data.frame(data1)
data1[is.na(data1)] <- ""
data1[!apply(data1 == "", 1, all), ]# remove empty row
data1 <-
data1[,colSums(is.na(data1)) != nrow(data1)]
data1 <-
data1[,!apply(data1 == "", 2, all)]
data1 <- data1[,1:2]
names(data1) <- c("Simul.data","Censored")
data_aic <- data.frame(left=rep(NA,nrow(data1)))
data_aic$left <- ifelse(data1$Censored,NA,data1$Simul.data)
data_aic$right <- data1$Simul.data
lnorm_fit <- fitdistcens(data_aic,"lnorm")
gamma_fit <- fitdistcens(data_aic,"gamma")
fit_aic <- c(lnorm_fit$aic,gamma_fit$aic)
distr_fit_compare <- distChooseCensored(data1$Simul.data,
data1$Censored, method = "sw",
choices = c("lnormAlt", "gammaAlt"))
ln_gamma <- distr_fit_compare$test.results
ln <- c(ln_gamma$lnormAlt$statistic,ln_gamma$lnormAlt$p.value)
gamma <- c(ln_gamma$gammaAlt$statistic,ln_gamma$gammaAlt$p.value)
final_summ <- data.frame(Statistics=
c("AIC","Statistics","P_value"),
Lognormal=c(fit_aic[1],ln[1],gamma[1]),
Gamma=c(fit_aic[2],ln[2],gamma[2]))
final_summ[,2:3] <- round(final_summ[,2:3],3)
fig_4plot <- function(){
par(mfrow=c(2,2))
cdfCompareCensored(data1$Simul.data,
data1$Censored,
distribution = "lnorm",
main="ECDF(dotted) vs Lognormal(blue)",
xlab="Order statistics")
cdfCompareCensored(data1$Simul.data,
data1$Censored,
distribution = "gamma",
main="ECDF(dotted) vs Gamma(red)",
xlab="Order statistics",
x.col = "red")
qqPlotCensored(data1$Simul.data,
data1$Censored,
main="Q-Q Plot & Lognormal fit",
distribution = "lnorm",estimate.params=TRUE,
add.line = TRUE,
xlab="Lognormal Quantiles",
ylab="Quantiles of data")
qqPlotCensored(data1$Simul.data,
data1$Censored,
main="Q-Q Plot & Gamma fit",
distribution = "gamma",estimate.params=TRUE,
add.line = TRUE,
equal.axes=FALSE,
xlab="Gamma Quantiles",
ylab="Quantiles of data")
}
r_result <- list(ss_table=final_summ,
ss_plot=fig_4plot)
return(r_result)
}
s_table()
is.null(s_table())
exists('storedData')
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
source("H:/paper/DL.half/Distribution.App/Censored.DF/app.R", echo=TRUE)
